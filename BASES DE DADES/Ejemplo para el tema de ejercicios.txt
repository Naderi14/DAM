SET SERVEROUTPUT ON
SELECT * FROM DB.EJERCICIOS;

CALL DB.SOL(NUMERO EJERCICIO,'');

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/																														  /
/												Ejercicios 901 - 912													  /
/																														  /
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
==============================================================================================================================
EJERCICIO 901
	"Cree una tabla DEPARTAMENTOS basándose en la siguiente tabla de instancias de tabla, utiliza una única instrucción.

	Nombre columna  			DEPARTAMENTO_ID 		NOMBRE
	Tipo de clave       		-                       -    
	Nulos/Únicos        		AUTOINCREMENT       	NOT NULL
	Tabla de claves ajenas 		-                       - 
	Columna de claves ajenas   	-                       -        
	Tipo de dato        		NUMBER              	VARCHAR2
	Longitud        			7                    	50"

	CREATE TABLE departamentos(
    	departamento_id NUMBER(7) GENERATED BY DEFAULT AS IDENTITY,
    	nombre VARCHAR(50) NOT NULL
	);

==============================================================================================================================
EJERCICIO 902
	"Agregue un comentario a la definición de la tabla DEPARTAMENTOS que describa la tabla."

	COMMENT ON TABLE departamentos IS 'Esta tabla alojará los distintos departamentos';

==============================================================================================================================
EJERCICIO 903
	"Agregue una restricción PRIMARY_KEY de nivel de tabla a la tabla DEPARTAMENTOS en la columna DEPARTAMENTO_ID. 
	Debe asignar el nombre my_dep_id_pk a la restricción en el momento de su creación.
	Indicación: La restricción se activa tan pronto como se ejecuta el comando ALTER TABLE correctamente."

	ALTER TABLE departamentos
	ADD CONSTRAINT my_dep_id_pk
	PRIMARY KEY(departamento_id);

==============================================================================================================================
EJERCICIO 904
	"Cree una tabla EMPLEADOS_DEP basándose en el siguiente gráfico de instancias de tabla.

	Nombre columna              EMPLEADO_ID NOMBRE      APELLIDO    DEPARTAMENTO_ID
	Tipo de clave               PRIMARY_KEY -           -           -         
	Nulos/Únicos                -           -           -           -
	Tabla de claves ajenas      -           -           -           -
	Columna de claves ajenas    -           -           -           FOREIGN KEY
	Tipo de dato                NUMBER      VARCHAR2    VARCHAR2    NUMBER
	Longitud                    7           25          25          7"

	CREATE TABLE empleados_dep(
	    empleado_id NUMBER(7),
	    nombre VARCHAR(25),
	    apellido VARCHAR(25),
	    departamento_id NUMBER(7),
	    PRIMARY KEY (empleado_id),
	    FOREIGN KEY (departamento_id) REFERENCES departamentos(departamento_id)
    );

==============================================================================================================================
EJERCICIO 905
	"Modifique la tabla EMPLEADOS_DEP para permitir un apellido de empleado de 50 caracteres."

	ALTER TABLE empleados_dep
	MODIFY apellido VARCHAR2(50);

==============================================================================================================================
EJERCICIO 906
	"Cree la tabla EMPLEADOS2 basándose en la estructura siguiente:

	Nombre columna              EMPLEADO_ID NOMBRE      APELLIDO    EMAIL         TELEFONO      FECHA_CONTRATO    JEFE_ID    SUELDO
	Tipo de clave               -           -           -           -             -             -                 -          -         
	Nulos/Únicos                NOT NULL    NOT NULL    NOT NULL    NOT NULL      NOT NULL      NOT NULL          -          -         
	Tabla de claves ajenas      -           -           -           -             -             -                 -          -         
	Columna de claves ajenas    -           -           -           -             -             -                 -          -         
	Tipo de dato                NUMBER      VARCHAR2    VARCHAR2    VARCHAR2      VARCHAR2      DATE              NUMBER     NUMBER  
	Longitud                    -           255         255         255           50            -                 12         8,2    "

	CREATE TABLE empleados2 (
	    empleado_id NUMBER NOT NULL,
	    nombre VARCHAR2(255) NOT NULL,
	    apellido VARCHAR2(255) NOT NULL,
	    email VARCHAR2(255) NOT NULL,
	    telefono VARCHAR2(50) NOT NULL,
	    fecha_contrato DATE NOT NULL,
	    jefe_id NUMBER(12),
	    sueldo NUMBER(8,2)
	);

==============================================================================================================================
EJERCICIO 907
	"Agregue una columna DEPARTAMENTO_ID a la tabla EMPLEADOS2 (será clave ajena a la tabla DEPARTAMENTOS en la siguiente pregunta). 
	El tipo de datos es number(7)."

	ALTER TABLE empleados2 ADD (departamento_id NUMBER(7));

==============================================================================================================================
EJERCICIO 908
	"Agregue una referencia de clave ajena en la tabla EMPLEADOS2 que asegure que no se asigna 
	el empleado a un departamento no existente. Llame a la restricción my_emp_dept_id_fk"

	ALTER TABLE empleados2 MODIFY (departamento_id NOT NULL)
	ADD CONSTRAINT my_emp_dept_id_fk FOREIGN KEY (departamento_id) REFERENCES departamentos(departamento_id);

==============================================================================================================================
EJERCICIO 909
	"Agregue una columna COMISION del tipo de datos NUMBER, precisión 2, escala 2 en la taba EMPLEADOS2 con una restricción
	a la columna COMISION que asegure que el valor de la comisión sea mayor o igual que cero."

	ALTER TABLE empleados2
	ADD (comision NUMBER(2,2) CHECK (comision >= 0));

==============================================================================================================================
EJERCICIO 910
	"Borre la columna SUELDO de la tabla EMPLEADOS2"

	ALTER TABLE empleados2
	DROP COLUMN sueldo;
	
==============================================================================================================================
EJERCICIO 911
	"Cambie el nombre de la tabla EMPLEADOS2 a EMPLEADOS_EMP"

	ALTER TABLE empleados2 RENAME TO empleados_emp;

==============================================================================================================================
EJERCICIO 912
	"Borre la tabla EMPLEADOS_EMP."

	DROP TABLE empleados_emp;


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/																														  /
/									Ejercicios 701 - 704 | 720 - 721 | 740 - 743										  /
/																														  /
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
==============================================================================================================================
EJERCICIO 701

"Dar de alta a un empleado con los siguientes datos:
EMPLEADO_ID:    108
NOMBRE:     	Daenerys
APELLIDO:       Targaryen
EMAIL:      	daenerys.targaryen@example.com
TELEFONO:       5.171.278.181
FECHA_CONTRATO: 10/12/2021
JEFE_ID:        1
PUESTO_TRABAJO: Princess
SUELDO:     	23900"

INSERT INTO empleados
VALUES (108, 'Daenerys', 'Targaryen', 'daenerys.targaryen@example.com', '5.171.278.181', '10/12/2021', 1, 'Princess', 23900);

==============================================================================================================================
EJERCICIO 702

"Dar de alta a un producto con los siguientes datos:
PRODUCTO_ID:    	289
NOMBRE_PRODUCTO:    Asus
DESCRIPCION:    	ASUS Laptop
PRECIO_ESTANDAR:    899
PRECIO_LISTADO: 	799
CATEGORIA_ID:   	5"

INSERT INTO productos
VALUES (289, 'Asus', 'ASUS Laptop', 899, 799, 5);

==============================================================================================================================
EJERCICIO 703
"Crear un pedido con datos al empleado (VENDEDOR_ID) Daenerys"

INSERT INTO pedidos
VALUES (106, 47, 'Pending', 108, '18/11/24');

==============================================================================================================================
EJERCICIO 704
"Crea una línea de pedido con el pedido y el producto creado anteriormente, la única condición es que el total del pedido sean 150 euros."

INSERT INTO pedido_articulos
VALUES (106, 14, 289, 1, 150);

==============================================================================================================================
EJERCICIO 720

'A los empleados que ganan menos de 3000 euros, aumentarles el sueldo en un 10%.'

UPDATE empleados SET sueldo = sueldo + (sueldo * 0.10)
WHERE sueldo < 3000;